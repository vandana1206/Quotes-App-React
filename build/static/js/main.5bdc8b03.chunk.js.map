{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","QuoteDetail","useParams","NotFound","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","children","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","NewQuote","React","lazy","App","fallback","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bdc8b03.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-quotes-3b0fc-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate(location.pathname, {\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","const NotFound = () => {\n  return (\n    <div className='centered'>\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/quotes' className={navData => navData.isActive ? classes.active : '' }>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-quote' className={navData => navData.isActive ? classes.active : '' }>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Route, Routes, Navigate, Link } from \"react-router-dom\";\nimport React, { Suspense }  from \"react\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\n\nimport NotFound from \"./pages/NotFound\";\nimport Layout from \"./components/layout/Layout\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n      <Routes>\n        <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n        <Route path=\"/quotes\" element={<AllQuotes />} />\n        <Route path=\"/quotes/:quoteId\" element={<QuoteDetail />}>\n          <Route\n            path=\"\"\n            element={\n              <div className=\"centered\">\n                <Link className=\"btn--flat\" to={`comments`}>\n                  Load Comments\n                </Link>\n              </div>\n            }\n          />\n          <Route path={`comments`} element={<Comments />} />\n        </Route>\n        <Route path=\"/new-quote\" element={<NewQuote />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}